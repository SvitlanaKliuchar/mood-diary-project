generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model moods {
  id           Int      @id @default(autoincrement())
  date         DateTime
  mood         String
  emotions     String[] @default([])
  sleep        String[] @default([])
  productivity String[] @default([])
  note         String?
  photoUrl     String?
  user_id      Int
  user         users    @relation(fields: [user_id], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([user_id])
  @@index([date])
}

model users {
  id                   Int     @id @default(autoincrement())
  username             String  @unique @db.VarChar(50)
  email                String  @unique @db.VarChar(100)
  password_hash        String
  moods                moods[]
  arts                 arts[]
  refreshTokens        refreshTokens[] 
  googleId             String?   @unique
  githubId             String?   @unique
  resetPasswordToken   String?  
  resetPasswordExpires DateTime?

  settings             userSettings?
}

model refreshTokens {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  user      users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([token])
}

model userSettings {
  id                    Int      @id @default(autoincrement())
  user                  users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId                Int      @unique

  darkMode              Boolean  @default(false)
  notificationsEnabled  Boolean  @default(false)
  notifyTime            String?
}

model arts {
  id            Int         @id @default(autoincrement())
  user          users       @relation(fields: [userId], references: [id])
  userId        Int    
  gifUrl        String
  thumbnailUrl  String
  title         String?
  createdAt     DateTime    @default(now())

  @@index([userId])
}